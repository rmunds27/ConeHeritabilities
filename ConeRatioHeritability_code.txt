#cone ratios MASTER clean analyses

#setup####################################################################################################
library(INLA)
library(AnimalINLA)
library(dplyr)
library(MCMCglmm)
library(kinship2)
library(MasterBayes)
library(ggplot2)
library(gridExtra)
library(pedigree)
library(htmlTable)
library(lubridate)
library(lme4)

#import and clean data###################################################################################################################################################################################

phenoRAW <- read.csv("ddPCR_2022.csv")
#remove infants and clean up column names for pheno data
phenoRAW$secs<-as.numeric(period_to_seconds(hms(phenoRAW$TOD)))
phenoRAW$hours<-phenoRAW$secs/3600

pheno<-phenoRAW %>%
  dplyr::select(ID=Cayo,year=Year, sex=Sex,age=Age,Lratio,Sratio,hours)%>%
  filter(age>0) %>%
  mutate(animal=ID)
pheno$year<-as.factor((pheno$year))


#clean pedigree#####
pedRAW <- read.csv("PedigreeData_2022.csv")
#for calculating x-chromosome matrix, father (heterozygous parent) need be in column 2
ped<-pedRAW %>%
  dplyr::select(ID=AnimalID,sire=Sire,dam=Dam,sex=Sex)
ped<-na_if(ped,y="?")
ped<-na_if(ped,y="")
ped$ID<-gsub("#", "", ped$ID)
ped$sire<-gsub("#", "", ped$sire)
ped$dam<-gsub("#", "", ped$dam)


#females (homozygous) are sex 1, males are sex 2
ped<-ped %>%
  filter(sex!="u")%>%
  filter(sex!="U")%>%
  mutate(sex=ifelse(sex=="F"|sex=="f",1,2))

#clean pedigree and put in correct order
ped<-as.data.frame(ped)
ped1<-prunePed(ped,keep=as.factor(pheno$ID))
ped<-MasterBayes::orderPed(ped1)

pedAlpha<-ped

summary(pheno)

#import models##############################################################################################
Sratio_base<-readRDS("Sratio_base.rds")
Sratio_animal<-readRDS("Sratio_animal.rds")

Lratio_base<-readRDS("Lratio_base.rds")
Lratio_animal<-readRDS("Lratio_animal.rds")


#L-ratio base model########################################################################################
prior1b<-list(R=list(V=1, nu=0.002))

Lratio_base<- MCMCglmm(Lratio ~ sex+age+as.factor(year)+hours,data = pheno,pr=TRUE,
                   nitt=2500000,thin=1000,burnin= 10000,prior=prior1b,verbose = TRUE)
summary(Lratio_base)
plot(Lratio_base$VCV)
Lratio_base$DIC

mean(subset(pheno$Lratio,pheno$sex=="F"))

saveRDS(Lratio_base,"Lratio_base.rds")

#######Permute residuals + calc sex differences in residual variance

residuals.data = pheno$Lratio-predict(Lratio_base, marginal=NULL)
sexnow=pheno$sex

B=10000 
perm=NULL
n=nrow(pheno)

for(b in 1:B) {
  sexnow_permute=sexnow[sample(n,n)]
  aa=aggregate(residuals.data,by=list(gr=sexnow_permute),var)
  ratio=log(aa[aa$gr=="M",-1]/aa[aa$gr=="F",-1])
  perm=rbind(perm,ratio) }
aa=aggregate(residuals.data,by=list(gr=sexnow),var)

ratio_obs=log(aa[aa$gr=="M",-1]/aa[aa$gr=="F",-1])
ratio_obs # 0.319
mean(abs(perm[,1])>=as.numeric(abs(ratio_obs[1]))) # 0.3201

perm = data.frame(perm)
colnames(perm) = c("Ratio")
ggplot(aes(x = Ratio), data = perm) + geom_histogram(color = "black", fill = "#7570b3", alpha = 0.8) + 
  theme_classic() + geom_vline(xintercept = ratio_obs, linetype = "dashed") + ylab("Count") +
  theme(axis.text = element_text(size=16), axis.title = element_text(size=16)) +
  theme(plot.title = element_text(hjust = 0.5, size = 16))

#L-ratio animal model########################################################################################
#this is Lratio_Aonly in coneRatio_testMods_Lratio

prior1a<-list(G=list(G1=list(V = 1,nu=0.002)),
              R=list(V=1, nu=0.002))

Lratio_animal<- MCMCglmm(scale(Lratio) ~ sex+age+year+hours, 
                        random = ~ animal,
                        pedigree = ped[,1:3],data = pheno,
                        nitt=2500000,thin=1000,burnin= 100000,prior = prior1a,verbose = TRUE)
saveRDS(Lratio_animal,"Lratio_animal.rds")



plot(Lratio_animal$VCV)
Lratio_animal$DIC
summary(Lratio_animal)


herit_L<-(Lratio_animal$VCV[,'animal']/
            ((Lratio_animal$VCV[,'animal'])+(Lratio_animal$VCV[,'units'])))
HPDinterval(herit_L)
mean(herit_L)

#S-ratio base model########################################################################################
#this is 'Sratio2' in coneRatio_Sratio.R
prior1b<-list(R=list(V=1, nu=0.002))

Sratio_base<- MCMCglmm(Sratio ~ sex+age+year+hours,data = pheno,
                   nitt=1500000,thin=1000,burnin= 10000,prior = prior1b,verbose = TRUE)
summary(Sratio_base)
plot(Sratio_base$VCV)
Sratio_base$DIC



#S-ratio animal model###############################################################################################
#this is 'Sratio1' in coneRatio_Sratio.R
prior1a<-list(G=list(G1=list(V = 1,nu=0.002)),
              R=list(V=1, nu=0.002))

Sratio_animal<- MCMCglmm(Sratio ~ sex+age+as.factor(year)+hours, 
                   random = ~ animal,
                   pedigree = ped[,1:3],data = pheno,
                   nitt=1500000,thin=1000,burnin= 10000,prior = prior1a,verbose = TRUE)
summary(Sratio_animal)
plot(Sratio_animal$VCV)

Sratio_animal$DIC

herit_S<-(Sratio_animal$VCV[,'animal']/
            ((Sratio_animal$VCV[,'animal'])+(Sratio_animal$VCV[,'units'])))
HPDinterval(herit_S)
mean(herit_S)

# permute residuals + calc sex difference in residual variance

residuals.data = pheno$Sratio-predict(Sratio_animal, marginal=NULL)
sexnow=pheno$sex

B=10000 
perm=NULL
n=nrow(pheno)

for(b in 1:B) {
  sexnow_permute=sexnow[sample(n,n)]
  aa=aggregate(residuals.data,by=list(gr=sexnow_permute),var)
  ratio=log(aa[aa$gr=="M",-1]/aa[aa$gr=="F",-1])
  perm=rbind(perm,ratio) }
aa=aggregate(residuals.data,by=list(gr=sexnow),var)

ratio_obs=log(aa[aa$gr=="M",-1]/aa[aa$gr=="F",-1])
ratio_obs # 0.319
mean((perm[,1])>=as.numeric(abs(ratio_obs[1]))) # 0.154
mean(abs(perm[,1])>=as.numeric(abs(ratio_obs[1]))) # 0.3095

perm = data.frame(perm)
colnames(perm) = c("Ratio")
ggplot(aes(x = Ratio), data = perm) + geom_histogram(color = "black", fill = "#7570b3", alpha = 0.8) + 
  theme_classic() + geom_vline(xintercept = ratio_obs, linetype = "dashed") + ylab("Count") +
  theme(axis.text = element_text(size=16), axis.title = element_text(size=16)) +
  theme(plot.title = element_text(hjust = 0.5, size = 16))

# s ratio partitioned 

prior1a2<-list( G=list(
  G1=list(V=1, nu=0.002),
  G2=list(V=1, nu=0.002)),
  R=list(R1=list(V=1, nu=0.002),R2=list(V=1, nu=10.002)))

pheno$sex = as.factor(pheno$sex)
Sratio_animal2<- MCMCglmm(Sratio ~ sex+age+as.factor(year)+hours, 
                          random = ~us(at.level(sex,"F")):animal+us(at.level(sex,"M")):animal,   
                          rcov=~us(at.level(sex,"F")):units+us(at.level(sex,"M")):units,
                          pedigree = ped[,1:3],data = pheno,
                          nitt=1500000,thin=1000,burnin= 10000,prior = prior1a2,verbose = TRUE,pr=TRUE)
saveRDS(Sratio_animal2, 'Sratio_animal2.rds')
Sratio_animal2$DIC

VgF = Sratio_animal2$VCV[, 1]
VeF = Sratio_animal2$VCV[, 3]
VgM = Sratio_animal2$VCV[, 2]
VeM = Sratio_animal2$VCV[, 4]

mean(VgF)
HPDinterval(VgF)
HPDinterval(VgF, prob = 0.68)
mean(VeF)
HPDinterval(VeF)
HPDinterval(VeF, prob = 0.68)
mean(VgM)
HPDinterval(VgM)
HPDinterval(VgM, prob = 0.68)
mean(VeM)
HPDinterval(VeM)
HPDinterval(VeM, prob = 0.68)

VpF <- VgF + VeF
VpM <- VgM + VeM
mean(VpF)
HPDinterval(VpF)
HPDinterval(VpF, prob = 0.68)
mean(VpM)
HPDinterval(VpM)
HPDinterval(VpM, prob = 0.68)


#table: fixed effects######################################################################################
#fixed effects from the two best models
#Lratio_base & Sratio_animal

fixedEffects_S<- list(Sratio_animal$Sol[,'(Intercept)'],Sratio_animal$Sol[,'sexM'],Sratio_animal$Sol[,'age'],Sratio_animal$Sol[,'as.factor(year)2019'], Sratio_animal$Sol[,'hours'])

fixedEffects_L<- list(Lratio_base$Sol[,'(Intercept)'],Lratio_base$Sol[,'sexM'],Lratio_base$Sol[,'age'],Lratio_base$Sol[,'as.factor(year)2019'],Lratio_base$Sol[,'hours'])

posterior.mode(fixedEffects_S)
mean(Sratio_animal$Sol[,"'as.factor(year)2019'"])

tab_FE<-data.frame("Fixed Effects"=c("Intercept","Sex (Male)","Age","Year (2019)","hours"),
                    "S-Ratio"=unlist(lapply(fixedEffects_S,function(x){
                      paste0(round(posterior.mode(x),5)," [",round(HPDinterval(x)[1], 3)," - ",
                             round(HPDinterval(x)[2], 3),"]")})),
                      "L-Ratio"=unlist(lapply(fixedEffects_L,function(x){
                        paste0(round(posterior.mode(x),5)," [",round(HPDinterval(x)[1], 3)," - ",
                               round(HPDinterval(x)[2], 3),"]")
                    })))
tab_FE
htmlTable(tab_FE)
#bar graph: variance components###########################################################################
##I, Rachel, could not get this to work
ranef_S<- list(Sratio_animal$VCV[,'animal'],
                Sratio_animal$VCV[,'units'],
                Sratio_animal$VCV[,'animal'],
                Sratio_animal$VCV[,'units'])

#summary(ranef_S)

#put in a table
tabranef <- data.frame(term=c("Animal","Residual","Animal","Residual"),
                       estimate=unlist(lapply(allranef, mode)),
                       CIlow=unlist(lapply(allranef, function(x){
                         round(HPDinterval(x)[1], 3)
                       })),
                       CIhigh=unlist(lapply(allranef, function(x){
                         round(HPDinterval(x)[2], 3)
                       })))
totPhen<-tabranef%>%
  group_by(Age)%>%
  summarise(totVar=sum(estimate))
totPhen


#unstacked bar graph with error bars
term.labs <- c("Residual","Individual Environment","Additive Genetic","Year")
names(term.labs) <- c("res", "aID","aani","ayr")


ggplot(data=ranef_S,aes(x=as.factor(age),y=estimate))+
  facet_grid(.~term,labeller=labeller (term=term.labs))+
  geom_col(aes(fill=term))+
  ylab("Variance")+
  xlab("Age Group")+
  geom_errorbar(aes(ymin=CIlow,ymax=CIhigh,x=as.factor(age)))+
  theme_minimal()+
  scale_fill_brewer(palette = 18)+
  theme(legend.position = "none")



#forest plot: fixed effects###########################################################################
fixedEffects_S<- list(Sratio_animal$Sol[,'(Intercept)'],Sratio_animal$Sol[,'sexM'],Sratio_animal$Sol[,'age'],Sratio_animal$Sol[,'as.factor(year)2019'],Sratio_animal$Sol[,'hours'])

fixedEffects_L<- list(Lratio_base$Sol[,'(Intercept)'],Lratio_base$Sol[,'sexM'],Lratio_base$Sol[,'age'],Lratio_base$Sol[,'as.factor(year)2019'],Lratio_base$Sol[,'hours'])

fixedEffects_all<- list(Sratio_animal$Sol[,'(Intercept)'],Sratio_animal$Sol[,'sexM'],Sratio_animal$Sol[,'age'],Sratio_animal$Sol[,'as.factor(year)2019'],Sratio_animal$Sol[,'hours']
                        ,Lratio_base$Sol[,'(Intercept)'],Lratio_base$Sol[,'sexM'],Lratio_base$Sol[,'age'],Lratio_base$Sol[,'as.factor(year)2019'],Lratio_base$Sol[,'hours'])

FE_sum<-data.frame(effect=c("Intercept", "Sex (male)", "Age", "Year (2019)", "Time of Day","Intercept", "Sex (male)", "Age", "Year (2019)", "Time of Day"),
                   model=c(rep("S",5),rep("L",5)),
                   value=unlist(lapply(fixedEffects_all, function(x){
                     round(mean(x), 5)})),
                   min=unlist(lapply(fixedEffects_all, function(x){
                     round(HPDinterval(x)[1], 5)
                   })),
                   max=unlist(lapply(fixedEffects_all, function(x){
                     round(HPDinterval(x)[2], 5)
                    })))

FE_sum<-filter(FE_sum,effect!="Intercept")
FE_sumS<-filter(FE_sum,model=="S")
FE_sumL<-filter(FE_sum,model=="L")


ggplot(data=FE_sum,aes(x=value,y=effect,group=model))+
  geom_errorbarh(aes(xmin=min,xmax=max))+
  theme_minimal()

library(cowplot)
library(ggplot2)

L<-ggplot(data=FE_sumL,aes(x=value,y=effect))+
  geom_point(size=3)+
  geom_errorbarh(aes(xmin=min,xmax=max), size=1)+
  geom_vline(xintercept=0,color="red", size=1)+
  coord_cartesian(xlim=c(-0.2,0.2))+
  labs(title = 'L:M Ratio')+
  theme_minimal()+
  theme(axis.title.x=element_blank(),
        axis.text.x = element_text(colour = "black", size = 14),
        axis.text.y = element_text(colour = "black", size = 14),
        axis.title.y=element_blank())
L

S<-ggplot(data=FE_sumS,aes(x=value,y=effect))+
  geom_point(size=3)+
  geom_errorbarh(aes(xmin=min,xmax=max), size=1)+
  geom_vline(xintercept=0,color="red", size=1)+
  coord_cartesian(xlim=c(-0.05,0.05))+
  labs(title = 'S:L+M Ratio')+
  theme_minimal()+
  theme(axis.title.x=element_blank(),
        axis.text.x = element_text(colour = "black", size = 14),
        axis.text.y = element_text(colour = "black", size = 14),
        axis.title.y=element_blank())
S

plot_grid(L,S,labels=c('A','B'))


#Plot with under 1 year olds
ggplot(phenoRAW, aes(hours, Lratio))+geom_point()+geom_smooth()
ML<-ggplot(phenoRAW, aes(hours, Lratio, fill = Sex)) +geom_point() + geom_smooth()+
  labs(y="Ratio of the L to M cones", x="Time of Day")+
  ylim(0.5,2.0)+
 # xlim(7.0,17.5)+
  theme_minimal()+
  guides(fill = "none") +
  theme(axis.text.x = element_text(colour = "black", size = 13, hjust = 0),
        axis.text.y = element_text(colour = "black", size = 13),
        axis.title.y = element_text(colour = "black", face = "bold", size = 14),
        axis.title.x = element_text(colour = "black", face = "bold", size = 14),
        title = element_text(color = "black", face = "bold"),
        legend.title = element_text(colour = "black", face = "bold", size = 14),
        legend.text = element_text(colour = "black", size = 14),
        legend.key.size = unit(1, 'cm'))
ML

#plot without under 1 year olds.
ggplot(pheno, aes(hours, Lratio))+geom_point()+geom_smooth()
LM<-ggplot(pheno, aes(hours, Lratio, fill = sex)) +geom_point() + geom_smooth()+
  labs(y="Ratio of the L to M cones", x="Time of Day")+
  ylim(0.5,2.0)+
 # xlim(8,18)+
  scale_x_continuous(limits=c(8,18)) +
  theme_minimal()+
  guides(fill = "none") +
  theme(axis.text.x = element_text(colour = "black", size = 13, hjust = 0),
        axis.text.y = element_text(colour = "black", size = 13),
        axis.title.y = element_text(colour = "black", face = "bold", size = 14),
        axis.title.x = element_text(colour = "black", face = "bold", size = 14),
        title = element_text(color = "black", face = "bold"),
        legend.title = element_text(colour = "black", face = "bold", size = 14),
        legend.text = element_text(colour = "black", size = 14),
        legend.key.size = unit(1, 'cm'))
LM





